//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SZABIST_IR_App.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AEAuditDBEntities : DbContext
    {
        public AEAuditDBEntities()
            : base("name=AEAuditDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAllocateCours> tblAllocateCourses { get; set; }
        public virtual DbSet<tblAllocateCoursesDetail> tblAllocateCoursesDetails { get; set; }
        public virtual DbSet<tblAssessmentResult> tblAssessmentResults { get; set; }
        public virtual DbSet<tblAssessmentResultDetail> tblAssessmentResultDetails { get; set; }
        public virtual DbSet<tblCampu> tblCampus { get; set; }
        public virtual DbSet<tblClusterHead> tblClusterHeads { get; set; }
        public virtual DbSet<tblClusterInfo> tblClusterInfoes { get; set; }
        public virtual DbSet<tblClusterMember> tblClusterMembers { get; set; }
        public virtual DbSet<tblQuestionGrading> tblQuestionGradings { get; set; }
        public virtual DbSet<tblQuestionnaire> tblQuestionnaires { get; set; }
        public virtual DbSet<tblQuestionStandard> tblQuestionStandards { get; set; }
        public virtual DbSet<tblRole> tblRoles { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<v_cHeads_clusterInfo> v_cHeads_clusterInfo { get; set; }
        public virtual DbSet<Vu_CampustoStandard> Vu_CampustoStandard { get; set; }
        public virtual DbSet<vue_clusterHead_clusterInfo> vue_clusterHead_clusterInfo { get; set; }
        public virtual DbSet<vueAssignedCoursesList> vueAssignedCoursesLists { get; set; }
        public virtual DbSet<vueExamList_Checked_NotAssessed> vueExamList_Checked_NotAssessed { get; set; }
    
        public virtual ObjectResult<GetPercentageDisdribution_Result> GetPercentageDisdribution(Nullable<int> semestertype, Nullable<int> semesteryear, Nullable<int> campus, Nullable<byte> p_ExamType, string programType)
        {
            var semestertypeParameter = semestertype.HasValue ?
                new ObjectParameter("semestertype", semestertype) :
                new ObjectParameter("semestertype", typeof(int));
    
            var semesteryearParameter = semesteryear.HasValue ?
                new ObjectParameter("semesteryear", semesteryear) :
                new ObjectParameter("semesteryear", typeof(int));
    
            var campusParameter = campus.HasValue ?
                new ObjectParameter("campus", campus) :
                new ObjectParameter("campus", typeof(int));
    
            var p_ExamTypeParameter = p_ExamType.HasValue ?
                new ObjectParameter("p_ExamType", p_ExamType) :
                new ObjectParameter("p_ExamType", typeof(byte));
    
            var programTypeParameter = programType != null ?
                new ObjectParameter("programType", programType) :
                new ObjectParameter("programType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPercentageDisdribution_Result>("GetPercentageDisdribution", semestertypeParameter, semesteryearParameter, campusParameter, p_ExamTypeParameter, programTypeParameter);
        }
    
        public virtual int sp_GetCourse_Instructor_ByYearSemsProg(Nullable<int> year, Nullable<int> semsterID, string programID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var semsterIDParameter = semsterID.HasValue ?
                new ObjectParameter("SemsterID", semsterID) :
                new ObjectParameter("SemsterID", typeof(int));
    
            var programIDParameter = programID != null ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetCourse_Instructor_ByYearSemsProg", yearParameter, semsterIDParameter, programIDParameter);
        }
    
        public virtual int sp_GetCourseByYearSemsProg(Nullable<int> year, Nullable<int> semsterID, string programID)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var semsterIDParameter = semsterID.HasValue ?
                new ObjectParameter("SemsterID", semsterID) :
                new ObjectParameter("SemsterID", typeof(int));
    
            var programIDParameter = programID != null ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetCourseByYearSemsProg", yearParameter, semsterIDParameter, programIDParameter);
        }
    
        public virtual ObjectResult<uspAssignedCoursesList_Result> uspAssignedCoursesList(string p_ClusterHeadID, Nullable<bool> p_isChecked, Nullable<bool> p_isCheckedByIR)
        {
            var p_ClusterHeadIDParameter = p_ClusterHeadID != null ?
                new ObjectParameter("p_ClusterHeadID", p_ClusterHeadID) :
                new ObjectParameter("p_ClusterHeadID", typeof(string));
    
            var p_isCheckedParameter = p_isChecked.HasValue ?
                new ObjectParameter("p_isChecked", p_isChecked) :
                new ObjectParameter("p_isChecked", typeof(bool));
    
            var p_isCheckedByIRParameter = p_isCheckedByIR.HasValue ?
                new ObjectParameter("p_isCheckedByIR", p_isCheckedByIR) :
                new ObjectParameter("p_isCheckedByIR", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAssignedCoursesList_Result>("uspAssignedCoursesList", p_ClusterHeadIDParameter, p_isCheckedParameter, p_isCheckedByIRParameter);
        }
    
        public virtual ObjectResult<uspGet_Faculty_Wise_Questions_Assessment_Result> uspGet_Faculty_Wise_Questions_Assessment(Nullable<byte> p_tFaculty_Id, Nullable<byte> p_ExamType, Nullable<byte> p_tCampus_Id, string p_Year, Nullable<decimal> p_Semster)
        {
            var p_tFaculty_IdParameter = p_tFaculty_Id.HasValue ?
                new ObjectParameter("p_tFaculty_Id", p_tFaculty_Id) :
                new ObjectParameter("p_tFaculty_Id", typeof(byte));
    
            var p_ExamTypeParameter = p_ExamType.HasValue ?
                new ObjectParameter("p_ExamType", p_ExamType) :
                new ObjectParameter("p_ExamType", typeof(byte));
    
            var p_tCampus_IdParameter = p_tCampus_Id.HasValue ?
                new ObjectParameter("p_tCampus_Id", p_tCampus_Id) :
                new ObjectParameter("p_tCampus_Id", typeof(byte));
    
            var p_YearParameter = p_Year != null ?
                new ObjectParameter("p_Year", p_Year) :
                new ObjectParameter("p_Year", typeof(string));
    
            var p_SemsterParameter = p_Semster.HasValue ?
                new ObjectParameter("p_Semster", p_Semster) :
                new ObjectParameter("p_Semster", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGet_Faculty_Wise_Questions_Assessment_Result>("uspGet_Faculty_Wise_Questions_Assessment", p_tFaculty_IdParameter, p_ExamTypeParameter, p_tCampus_IdParameter, p_YearParameter, p_SemsterParameter);
        }
    }
}
