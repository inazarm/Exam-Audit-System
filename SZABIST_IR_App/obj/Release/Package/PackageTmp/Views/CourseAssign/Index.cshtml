@model SZABIST_IR_App.Models.tblAllocateCours
@{
    ViewBag.Title = "Course-Assign";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card-header">
    <h5>COURSE ALLOCATION TO CLUSTER HEADS</h5>
</div>
<div class="container">
    <div class="card justify-content-center">
        <form class="form-material" action="@Url.Action("Index","CourseAssign")" method="post" id="frmCourseAssign">
            <div class="card-body">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.tCluster_Head_Id)
                <input type="hidden" id="selectedcrs" />
                <div class="form-group row col-12">
                    <div class="col-md-4">
                        <div class="form-group form-primary form-static-label">
                            @if (ViewBag.clusters != null)
                            {
                                @Html.DropDownList("ClusterID", ViewBag.clusters as SelectList, "-- Select Title --", new { @class = "form-control form-control-sm", @required = "required" })
                            }
                            @Html.ValidationMessage("ClusterID", "", new { @class = "text-danger" })
                            <span class="form-bar"></span>
                            <label class="float-label">Cluster Title</label>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group form-primary">
                            @Html.TextBoxFor(model => model.ClusterHeadName, "", new { @class = "form-control", @required = "True" })
                            @Html.HiddenFor(model => model.ClusterHeadID)
                            <span class="form-bar"></span>
                            <label class="float-label">Cluster Head Name</label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group form-primary form-static-label">
                            @if (ViewBag.campus != null)
                            {
                                @Html.DropDownListFor(a => a.tCampus_Id, ViewBag.campus as SelectList, "-- Select Campus --", new { @class = "form-control form-control-sm", @required = "required" })
                                @*@Html.DropDownListFor(model => model.tCampus_Id, ViewBag.campus as SelectList, new { @class = "form-control form-control-sm" })*@
                            }
                            @Html.ValidationMessageFor(model => model.tCampus_Id, "", new { @class = "text-danger" })
                            <span class="form-bar"></span>
                            <label class="float-label">Campus Name</label>
                        </div>
                    </div>
                </div>
                <div class="row col-md-12">
                    <div class="col-md-4">
                        <div class="form-group form-primary form-static-label">
                            @Html.DropDownListFor(model => model.Semster, new List<SelectListItem>{
                           new SelectListItem{ Text="Spring", Value = "1" },
                           new SelectListItem{ Text="Summer", Value = "2" },
                           new SelectListItem{ Text="Fall", Value = "3" } },
                           "-- Select Semester --", new { @class = "form-control form-control-sm validate[required]", @required = "True" })
                            @*@Html.EditorFor(model => model.Semster, new { htmlAttributes = new { @class = "form-control form-control-sm", @required = "True" } })*@
                            @Html.ValidationMessageFor(model => model.Semster, "", new { @class = "text-danger" })
                            <span class="form-bar"></span>
                            <label class="float-label">Semester Name</label>
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div class="form-group form-primary form-static-label">
                            <select name="Year" id="Year" class="form-control form-control-sm" required="required">
                                <option disabled selected value="">-- Select Year --</option>
                            </select>
                            <span class="form-bar"></span>
                            <label class="float-label">Select Year</label>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group form-primary form-static-label">
                            @Html.DropDownListFor(m => m.Program, Enumerable.Empty<SelectListItem>(), "-- Select Program --", new { @class = "form-control form-control-sm validate[required]", @required = "True" })
                            @Html.ValidationMessageFor(model => model.Program, "", new { @class = "text-danger" })
                            @*@Html.HiddenFor(p => p.tFaculty_Id)
                                @Html.HiddenFor(p => p.Program_LongDesc)
                                @Html.HiddenFor(p => p.Program_ShortDesc)*@
                            <span class="form-bar"></span>
                            <label class="float-label">Program Name</label>
                        </div>
                    </div>
                </div>
                <div class="row col-md-12">
                    @*<div class="col-md-4">
                            <div class="form-group form-default form-static-label">
                                @Html.DropDownListFor(m => m.Section, Enumerable.Empty<SelectListItem>(), "-- Select Section --", new { @class = "form-control form-control-sm validate[required]", @required = "True" })
                                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                                <span class="form-bar"></span>
                                <label class="float-label">-- Select Section --</label>
                            </div>
                        </div>*@
                    <div class=" col-md-3">
                        <div class="form-group form-primary form-static-label">
                            @Html.DropDownListFor(model => model.ExamType, new List<SelectListItem>{
                               new SelectListItem{ Text="Midterm Exams", Value = "1" },
                               new SelectListItem{ Text="Final Exams", Value = "2" }},
                                "-- Select Exam --", new { @class = "form-control form-control-sm", @required = "True" })
                            @Html.ValidationMessageFor(model => model.ExamType, "", new { @class = "text-danger" })
                            @Html.HiddenFor(e => e.ExamTypeName)
                            <span class="form-bar"></span>
                            <label class="float-label">Exam Type</label>
                        </div>
                    </div>
                    <div class="row col-md-5">
                        <div class="col-md-12 text-center">
                            <button type="button" id="btnFetch" class="btn btn-primary btn-outline-primary btn-sm"><i class="ti-check"></i> <b> FETCH COURSES DETAILS</b></button>
                        </div>
                    </div>
                </div>

                @*dispaly All Courses for selection*@
                <div class="row col-md-12">
                    <div id="courseList">
                    </div>
                </div>
                @*dispaly All Selected Courses Details... *@
                <div id="divSelectedCourses" style="display:none;">
                    <div class="card-header">
                        <h5>SELECTED COURSES INFORMATION</h5>
                    </div>
                    <div class="row col-md-12">
                        <table id="tblSelectedCourse" class="table table-striped table-bordered table-hover table-sm display compact" width="100%">
                            <thead>
                                <tr style="background-color:#0047AB;color:white;">
                                    <th>Course Code</th>
                                    <th>Course Name</th>
                                    <th>Instructor Name</th>
                                    <th>Class</th>
                                </tr>
                            </thead>
                            <tbody class="tbody">
                            </tbody>
                        </table>
                    </div>
                    <div class="row col-md-12">
                        <div class="col-md-12 text-center" style="margin-top:0;">
                            <button type="submit" id="btnSave" class="btn btn-primary btn-outline-primary btn-sm"><i class="ti-check"></i><b> ALLOCATE SELETED COURSES</b></button>
                        </div>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
        /*...Start... Get Campus Default ID....*/
       // var campDefaultID = $("#campusDefaultID").val();
        //var campDefaultID = "1";
        //$("#tCampus_Id").val($(this).find('select option[value="' + campDefaultID + '"]').attr("selected", true));//set karachi as a default campus...
        $('#tCampus_Id option:contains("Karachi")').prop('selected', true);
        var campDefaultID = $("#tCampus_Id").val();
        console.log("cid " + campDefaultID);
        programList(campDefaultID);
        $("#tCampus_Id").change(function ()
        {
            $('#tblSelectedCourse tbody').empty();
             campDefaultID = $("#tCampus_Id option:selected").val();
             //console.log("cid " + campDefaultID);
             programList(campDefaultID);
        });
        /*...End...*/
        //get years and show into dropdown...
        var nowY = new Date().getFullYear(),
            options = "";
        for (var Y = nowY; Y >= 2000; Y--) {
            options += "<option>" + Y + "</option>";
        }
        $("#Year").append(options);
        //....on changing semester hide course details...
        $("#Semster").change(function () {
            /*$('#tblSelectedCourse').empty();*/
            $("#courseList").hide();
            $("#divSelectedCourses").hide();
        })
        //...End..//
        //....on changing Year hide course details...
        $("#Year").change(function () {
           /* $('#tblSelectedCourse').empty();*/
            $("#courseList").hide();
            $("#divSelectedCourses").hide();
        })
        //...End..//

        //....on changing Program hide course details...
        $("#Program").change(function ()
        {
            $('#tblSelectedCourse tbody').empty();
            /*$('#tblSelectedCourse').empty();*/
            $("#courseList").hide();
            $("#divSelectedCourses").hide();
        })
        //...End..//
        //....Selecting ExamType set value into hidden textbox and hiding course details...
        $("#ExamType").change(function () {
            /*$('#tblSelectedCourse').empty();*/
            $("#courseList").hide();
            $("#divSelectedCourses").hide();
            $("#divSelectedCourses").hide();
            var eTxt = ($(this).find("option:selected").text());
            $("#ExamTypeName").val(eTxt);
        });
        //...End...//


        $("#ClusterID").change(function () {
            var clusterID = $("option:selected", this).val();
            //console.log(clusterID);
            if (clusterID != "") {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("ClusterHead", "CourseAssign")',
                    data: { Id: clusterID },
                    success: function (response) {
                        if (response != null) {
                            $("#tCluster_Head_Id").val(response.tCluster_Head_Id);
                            $('#ClusterHeadID').val(response.ClusterHeadID);
                            $('#ClusterHeadName').val(response.ClusterHeadName);
                        } else {
                            alert("Something went wrong");
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }
            else {
                $('#ClusterHeadID').val('');
                $("#tCluster_Head_Id").val('');
            }
        });

        $('#ClusterHeadName').focusin(function () {
            $(this).prop('readonly', true);
        });
        $('#ClusterHeadName').focusout(function () {
            $(this).prop('readonly', false);
        });

        $("#btnFetch").click(function () {
            //var selectedPro = "1-1-1";

            var selectedPro = $("#Program option:selected").val();
            var SemsID = $("#Semster option:selected").val();
            var Year = $("#Year option:selected").val();
            var cID = $("#tCampus_Id option:selected").val();
            var eType = $("#ExamType option:selected").val();
            var cluster = $("#ClusterID option:selected").val();
            if (cluster == ''){
                alert("Plese Select Cluster Title");
            }
            else if (cID == ''){
                alert("Plese Select Campus");
            }
            else if (SemsID == '') {
                alert("Plese Select Semester");
            }
            else if (Year == '') {
                alert("Plese Select Year");
            }
            else if (selectedPro == '') {
                alert("Plese Select Program");
            }
            else if (eType == '') {
                alert("Plese Select Exam Type");
            }
            else {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("CourseList", "CourseAssign")',
                    data: { prgmId: selectedPro, year: Year, sId: SemsID, campusID: cID },
                    success: function (data) {
                        if (data.msg) {
                            $("#courseList").hide();
                            alert(data.msg);
                        }
                        else {
                            $("#courseList").show();
                            $("#courseList").html(data);
                        }

                    },
                    error: function (result) {
                        alert("Ajax Failed!");
                    }
                });
            }
            @*var Head = $("#ClusterHeadID option:selected").val();
            var Campus = $("#CampusID option:selected").val();
            var selectedPro = $("#Program option:selected").val();
            var examType = $("#ExamType option:selected").val();
            var Year = $("#Year").val();
            var SemsID = $("#Semster option:selected").val();

            if (Head == "") {
                alert("Please Select Cluster Head!");
            }
            else if (Campus == "")
            {
                alert("Please Select Campus!");
            }
            else if (Year == "") {
                alert("Please Enter Year!");
            }
            else if (SemsID == "" || SemsID == -1) {
                alert("Please Select Semester!");
            }
            else if (selectedPro == "" || selectedPro == -1) {
                alert("Please Select Program!");
            }
            else if (examType == "" || selectedPro == -1) {
                alert("Please Select Exam Type!");
            }
            else {
                if (selectedPro != "" && Year != "" && SemsID != "" && examType != "") {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("CourseList", "CourseAssign")',
                        data: { prgmId: selectedPro, year: Year, sId: SemsID },
                        success: function (data) {
                            $("#courseList").html(data);
                        },
                        error: function (e, ts, et) {
                            alert(ts);
                        }
                    });
                } else {
                    alert("Fill all required fields!");
                }
            }*@

        });

        $("#frmCourseAssign").on('submit', function (e) {
            debugger
            e.preventDefault();
            var action = $("#frmCourseAssign").attr('action');
            var method = $("#frmCourseAssign").attr('method');
            var formData = $("#frmCourseAssign").serialize();
            var courses = "";
            $("#tblSelectedCourse tbody tr").each(function () {
                var row = $(this);
                var cID = $.trim(row.find("td").eq(0).text());
                var cCode = $.trim( row.find("td").eq(2).text());
                var cName = $.trim( row.find("td").eq(3).text());
                var Instructor = $.trim( row.find("td").eq(4).text());
                var Class = $.trim( row.find("td").eq(5).text());
                var userID = $.trim( row.find("td").eq(6).text());
                var semesterID = $.trim( row.find("td").eq(7).text());
                var SemesterSection_Id = $.trim( row.find("td").eq(8).text());
                var campusID = $.trim( row.find("td").eq(9).text());
                var programID = $.trim( row.find("td").eq(10).text());
                courses = courses + cID + "~" + cCode + "~" + cName + "~" + Instructor + "~" + Class + "~" + userID + "~" + semesterID + "~" + SemesterSection_Id + "~" + campusID + "~" + programID + "^";
            });
            var data = JSON.stringify(formData + "&courseData=" + courses);
            $.ajax({
                type: method,
                url: action,
                data: data,
                success: function (data) {
                    if (data.success == true) { // if true (1)
                        alert("Record Saved Successfully!");
                        setTimeout(function () {// wait for 5 secs(2)
                            location.reload(); // then reload the page.(3)
                        }, 500);
                    }
                },
                Error: function (data) {
                    alert(data);
                }
            })


        });

        function uncheckAll() {
            $('#tblCourseList input[type="checkbox"]:checked').prop('checked', false);
        }

        function programList(cid) {
            //var selectedValue = $("#tCampus_Id option:selected").val();
            if (cid != "") {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("ProgramList", "CourseAssign")',
                    data: { campusID: cid },
                    success: function (data) {
                        if (data != null) {
                            var s = '';
                            s += '<option value="" selected disabled hidden>-- Select Program --</option>';
                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].programID + '">' + data[i].programName + '</option>';
                            }
                            $("#Program").html(s);
                        }
                    },
                    error: function (e, ts, et) {
                        var s = '<option value="" selected disabled hidden>-- Select Program --</option>';
                        $("#Program").html(s);
                        alert(ts);
                    }
                });
            }
            }
        });
    </script>
}