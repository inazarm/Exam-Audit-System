@model SZABIST_IR_App.Models.tblClusterHead

@{
    ViewBag.Title = "Create";
}
<div class="card-header">
    <h5>ASSIGNING HEAD TO CLUSTERS - <i class="label bg-primary">CREATE ONLY</i></h5>
</div>
<a href='@Url.Action("Index")' class="btn btn-outline-dark btn-sm"><i class="ti-arrow-left"></i><b>BACK TO LIST</b></a>
<div class="container">
    <div class="main-body">
        <div class="row d-flex justify-content-center">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xs-offset-0 col-sm-offset-0 col-md-offset-0 col-lg-offset-0">
                <div class="card justify-content-center">
                    <div class="card-body ">
                        @using (Html.BeginForm("Create", "ClusterMembers", FormMethod.Post, new { @class = "form-material" }))
                        {
                            <div class="row col-md-12 justify-content-center">
                                @if (ViewBag.success != null)
                                {
                                    <div class="alert alert-success" id="alert">
                                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                        <strong>SUCCESS!</strong> @ViewBag.success
                                    </div>
                                }
                                else
                                {
                                    if (ViewBag.error != null)
                                    {
                                        <div class="alert alert-danger" id="alert">
                                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                            <strong>ERROR!</strong>
                                            @ViewBag.error
                                        </div>
                                    }

                                }
                            </div>
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row col-md-12">
                        @*<div class="col-md-5">
            <div class="form-group form-default">
                @Html.EditorFor(model => model.tCluster_ID, new { htmlAttributes = new { @class = "form-control form-control-sm", @required = "required" } })
                <span class="form-bar"></span>
                <label class="float-label">SELECT CLUSTER TITLE</label>
            </div>
        </div>*@
                        <div class="col-md-4">
                            <div class="form-group form-primary form-static-label">
                                @if (ViewBag.clustersTitle != null)
                                {
                                    @Html.DropDownListFor(a => a.tCluster_ID, (IEnumerable<SelectListItem>)ViewBag.clustersTitle, "-- Select Cluster Title --", new { @class = "form-control form-control-sm", @required = "required" })
                                }
                                @Html.ValidationMessageFor(model => model.tCluster_ID, "", new { @class = "text-danger" })
                                <span class="form-bar"></span>
                                <label class="float-label">Cluster Title</label>
                            </div>
                        </div>
                        <div class="col-md-3" style="display:none">
                            <div class="form-group form-primary form-static-label">
                                @if (ViewBag.campus != null)
                                {
                                    @*@Html.DropDownListFor(a => a.CampusID, (IEnumerable<SelectListItem>)ViewBag.campus, "-- Select Campus --", new { @class = "form-control form-control-sm", @required = "required" })*@
                                    @Html.DropDownListFor(model => model.CampusID, ViewBag.campus as SelectList, new { @class = "form-control form-control-sm", @required = "required" })
                                    @Html.HiddenFor(b => b.CampusID);
                                }
                                @Html.ValidationMessageFor(model => model.CampusID, "", new { @class = "text-danger" })
                                <span class="form-bar"></span>
                                <label class="float-label">Cluster Head</label>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group form-primary form-static-label">
                                @if (ViewBag.clusterHead != null)
                                {
                                    @Html.DropDownListFor(a => a.ClusterHeadID, (IEnumerable<SelectListItem>)ViewBag.clusterHead, "-- Select Cluster Head --", new { @class = "form-control form-control-sm", @required = "required" })
                                    @Html.HiddenFor(b => b.ClusterHeadName);
                                }
                                @Html.ValidationMessageFor(model => model.ClusterHeadID, "", new { @class = "text-danger" })
                                <span class="form-bar"></span>
                                <label class="float-label">Cluster Head</label>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group form-primary form-static-label">
                                @*<input type="text" name="footer-email" class="form-control" required="">*@
                                @Html.TextBoxFor(model => model.WEF_From, new { @class = "form-control form-control-sm", @type = "Date", @required = "Required" })
                                @Html.ValidationMessageFor(model => model.WEF_From, "", new { @class = "text-danger" })
                                <span class="form-bar"></span>
                                <label class="float-label">WEF-Date</label>
                            </div>
                        </div>

                    </div>
                            <div class="row col-md-12">
                                <div class="col-md-12 text-center">
                                    <button type="submit" id="btnSave" class="btn waves-effect waves-light btn-primary btn-outline-primary"><i class="ti-check"></i> <b> CONFIRM TO SAVE</b></button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $("#ClusterHeadID").on("change", function () {
            $("#ClusterHeadName").val($(this).find("option:selected").text());
        });
    })
</script>
@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>tblClusterMember</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.tCluster_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tCluster_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tCluster_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClusterMemberID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClusterMemberID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClusterMemberID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClusterMemberName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClusterMemberName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClusterMemberName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@


